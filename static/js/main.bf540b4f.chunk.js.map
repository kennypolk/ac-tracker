{"version":3,"sources":["components/ListItemLink.js","components/AppMenu.js","components/Layout.js","components/Home.js","components/CheckboxGroup.js","components/Filter.js","components/CheckboxFilter.js","components/RadioGroup.js","components/RadioFilter.js","components/fishSlice.js","components/FishFilter.js","components/FullScreenDialog.js","components/FilterDialog.js","components/FishListItem.js","components/FishList.js","components/Fish.js","appSlice.js","App.js","serviceWorker.js","app/rootReducer.js","app/store.js","theme.js","index.js"],"names":["ListItemLink","icon","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","list","width","offset","mixins","toolbar","AppMenu","classes","useState","drawerIsOpen","setDrawerIsOpen","toggleDrawer","open","event","type","key","className","role","onClick","onKeyDown","List","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Drawer","onClose","Layout","props","Container","maxWidth","children","Home","href","Component","displayName","name","CheckboxGroup","items","selectedItems","valueField","textField","onChange","handleChange","target","value","checked","checkboxes","map","item","index","FormControlLabel","includes","toString","control","Checkbox","label","FormControl","FormGroup","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","Filter","id","collapseState","onCollapseToggle","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","CheckboxFilter","RadioGroup","selectedValue","radios","Radio","RadioFilter","setArrayState","source","element","push","indexOf","splice","fishSlice","createSlice","initialState","hemisphereFilter","monthFilter","timeFilter","locationFilter","shadowFilter","hemisphere","month","time","location","shadow","collapseModalState","reducers","setHemisphereFilter","state","payload","setMonthFilter","setTimeFilter","setLocationFilter","setShadowFilter","setCollapseModalState","isOpen","setCollapseState","actions","FishFilter","filters","isModal","dispatch","useDispatch","useSelector","fish","handleCollapseToggle","slice","Fragment","hemispheres","parseInt","months","timeOfDay","locations","shadows","Transition","Slide","direction","FullScreenDialog","Dialog","fullScreen","TransitionComponent","appBar","marginLeft","flex","FilterDialog","autoFocus","root","minWidth","bullet","display","margin","transform","pos","marginBottom","FishListItem","Grid","xs","Card","CardContent","price","FishList","fishListItems","x","container","paddingTop","paper","padding","textAlign","palette","text","secondary","filterSelector","app","filteredFishSelector","createSelector","hemisphereId","filter","availability","length","some","console","log","Fish","setOpen","Hidden","smDown","md","Paper","elevation","mdUp","justify","Button","size","startIcon","appSlice","bugs","error","fetchDataSucess","fetchDataFail","App","useEffect","url","a","fetch","response","json","data","exact","path","Boolean","window","hostname","match","rootReducer","combineReducers","appReducer","fishReducer","store","configureStore","reducer","createMuiTheme","main","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bf540b4f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst ListItemLink = ({ icon, primary, to }) => {\r\n  const renderLink = React.useMemo(\r\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ListItemLink","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemLink from './ListItemLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  offset: theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppMenu = () => {\r\n  const classes = useStyles();\r\n\r\n  const[drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setDrawerIsOpen(open);\r\n  };\r\n\r\n  const list = (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}>\r\n      <List>\r\n        <ListItemLink to=\"/\" primary=\"Home\" />\r\n        <ListItemLink to=\"/fish\" primary=\"Fish\" />\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            AC Tracker\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.offset} />\r\n      <Drawer open={drawerIsOpen} onClose={toggleDrawer(false)}>\r\n        {list}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppMenu","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppMenu from './AppMenu'\r\n\r\nconst Layout = (props) => {\r\n  const maxWidth = \"xl\";\r\n\r\n  return (\r\n    <div>\r\n      <AppMenu />\r\n      <Container maxWidth={maxWidth}>\r\n        {props.children}\r\n      </Container>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst CheckboxGroup = (props) => {\r\n  const {\r\n    items, \r\n    selectedItems, \r\n    valueField = \"id\", \r\n    textField = \"value\", \r\n    onChange\r\n  } = props;\r\n\r\n  const handleChange = (event) => {\r\n    if (onChange) {\r\n      onChange(event.target.value, event.target.checked);\r\n    }\r\n  }\r\n\r\n  const checkboxes = items && items.map((item, index) => \r\n    <FormControlLabel \r\n      key={index}\r\n      checked={selectedItems.includes(item[valueField])} value={item[valueField].toString()}\r\n      onChange={handleChange}\r\n      control={<Checkbox />} \r\n      label={item[textField].toString()} />  \r\n  );\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup>\r\n        {checkboxes}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCheckboxGroup.propTypes = {\r\n  items: PropTypes.array,\r\n  selectedItems: PropTypes.array,\r\n  textField: PropTypes.string,\r\n  valueField: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default CheckboxGroup","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nconst Filter = ({id, label, collapseState, children, onCollapseToggle}) => {\r\n  const classes = useStyles();\r\n\r\n  const toggle = () => {\r\n    onCollapseToggle(id, !collapseState[id]);\r\n  }\r\n\r\n  return (\r\n    // <div className=\"filter\">\r\n    //   {/* <Button color=\"link\" onClick={toggle}>\r\n    //     <span className=\"button-wrapper\">\r\n    //       {label}\r\n    //       <span className=\"filter-icon\">\r\n    //         <FontAwesomeIcon icon={collapseState[id] ? faMinus : faPlus} />\r\n    //       </span>  \r\n    //     </span>\r\n    //   </Button>\r\n    //   <Collapse isOpen={collapseState[id]}>\r\n    //     <div className=\"filter-body\">\r\n    //       {children}\r\n    //     </div>\r\n    //   </Collapse>       */}\r\n    // </div>    \r\n\r\n\r\n    <ExpansionPanel expanded={collapseState[id]} onChange={toggle}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography className={classes.heading}>{label}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        {children}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  collapseState: PropTypes.object\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CheckboxGroup from './CheckboxGroup';\r\nimport Filter from './Filter';\r\n\r\nconst CheckboxFilter = (props) => {\r\n  const {\r\n    id, \r\n    items, \r\n    selectedItems, \r\n    label, \r\n    collapseState, \r\n    onChange, \r\n    onCollapseToggle\r\n  } = props;\r\n\r\n  return (\r\n    <Filter id={id} label={label} collapseState={collapseState} onCollapseToggle={onCollapseToggle}>\r\n      <CheckboxGroup \r\n        items={items}\r\n        selectedItems={selectedItems}\r\n        onChange={onChange} />\r\n    </Filter>\r\n  );\r\n}\r\n\r\nCheckboxFilter.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  items: PropTypes.array,\r\n  selectedItems: PropTypes.array,\r\n  label: PropTypes.string,\r\n  collapseState: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  onCollapseToggle: PropTypes.func\r\n}\r\n\r\nexport default CheckboxFilter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport MuiRadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nconst RadioGroup = (props) => {\r\n  const {\r\n    items, \r\n    selectedValue, \r\n    textField = \"value\", \r\n    valueField = \"id\", \r\n    onChange\r\n  } = props;\r\n\r\n  const radios = items && items.map((item, index) => \r\n    <FormControlLabel \r\n      key={index}\r\n      checked={selectedValue === item[valueField].toString()} \r\n      value={item[valueField].toString()} \r\n      control={<Radio />} \r\n      label={item[textField]} />\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    if (onChange) {\r\n      onChange(event.target.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <MuiRadioGroup value={selectedValue} onChange={handleChange}>\r\n        {radios}\r\n      </MuiRadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nRadioGroup.propTypes = {\r\n  items: PropTypes.array,\r\n  selectedValue: PropTypes.string,\r\n  textField: PropTypes.string,\r\n  valueField: PropTypes.string,\r\n  onChange: PropTypes.func\r\n}\r\n\r\nexport default RadioGroup","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport RadioGroup from './RadioGroup';\r\nimport Filter from './Filter'\r\n\r\nconst RadioFilter = ({id, items, selectedValue, label, collapseState, onChange, onCollapseToggle}) => {\r\n  return (\r\n    <Filter id={id} label={label} collapseState={collapseState} onCollapseToggle={onCollapseToggle}>\r\n      <RadioGroup \r\n        items={items}\r\n        selectedValue={selectedValue} \r\n        onChange={onChange} />\r\n    </Filter>\r\n  );\r\n}\r\n\r\nRadioFilter.propTypes = {\r\n  id: PropTypes.string,\r\n  items: PropTypes.array,\r\n  selectedValue: PropTypes.string,\r\n  label: PropTypes.string,\r\n  collapseState: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  onCollapseToggle: PropTypes.func\r\n}\r\n\r\nexport default RadioFilter;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nfunction setArrayState(source, element, checked) {\r\n  if (checked) {\r\n    source.push(element);\r\n  } else {\r\n    var index = source.indexOf(element);\r\n    if (index !== -1) {\r\n      source.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\nconst fishSlice = createSlice({\r\n  name: 'fish',\r\n  initialState: {\r\n    hemisphereFilter: 1,\r\n    monthFilter: [],\r\n    timeFilter: [],\r\n    locationFilter: [],\r\n    shadowFilter: [],\r\n    collapseState: {\r\n      hemisphere: true,\r\n      month: true,\r\n      time: true,\r\n      location: true,\r\n      shadow: true\r\n    },\r\n    collapseModalState: {\r\n      hemisphere: false,\r\n      month: false,\r\n      time: false,\r\n      location: false,\r\n      shadow: false\r\n    }\r\n  },\r\n  reducers: {\r\n    setHemisphereFilter(state, { payload }) {\r\n      state.hemisphereFilter = payload.value;\r\n    },\r\n    setMonthFilter(state, { payload }) {\r\n      const { value, checked } = payload;\r\n\r\n      setArrayState(state.monthFilter, value, checked);\r\n    },\r\n    setTimeFilter(state, { payload }) {\r\n      const { value, checked } = payload;\r\n\r\n      setArrayState(state.timeFilter, value, checked);\r\n    },\r\n    setLocationFilter(state, { payload }) {\r\n      const { value, checked } = payload;\r\n\r\n      setArrayState(state.locationFilter, value, checked);\r\n    },\r\n    setShadowFilter(state, { payload }) {\r\n      const { value, checked } = payload;\r\n\r\n      setArrayState(state.shadowFilter, value, checked);\r\n    },\r\n    setCollapseModalState(state, { payload }) {\r\n      const { id, isOpen } = payload;\r\n\r\n      state.collapseModalState[id] = isOpen;\r\n    },\r\n    setCollapseState(state, { payload }) {\r\n      const { id, isOpen } = payload;\r\n\r\n      state.collapseState[id] = isOpen;\r\n    }\r\n  }\r\n})\r\n\r\nexport const { \r\n  setHemisphereFilter, \r\n  setMonthFilter,\r\n  setTimeFilter,\r\n  setLocationFilter,\r\n  setShadowFilter,\r\n  setCollapseModalState,\r\n  setCollapseState\r\n} = fishSlice.actions\r\n\r\nexport default fishSlice.reducer","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport CheckboxFilter from './CheckboxFilter';\r\nimport RadioFilter from './RadioFilter';\r\nimport * as slice from './fishSlice'\r\n\r\nconst FishFilter = ({filters, isModal = false}) => { \r\n  const dispatch = useDispatch();\r\n  const hemisphereFilter = useSelector(state => state.fish.hemisphereFilter);\r\n  const monthFilter = useSelector(state => state.fish.monthFilter);\r\n  const timeFilter = useSelector(state => state.fish.timeFilter);\r\n  const locationFilter = useSelector(state => state.fish.locationFilter);\r\n  const shadowFilter = useSelector(state => state.fish.shadowFilter);  \r\n  const collapseModalState = useSelector(state => state.fish.collapseModalState);\r\n  const collapseState = useSelector(state => state.fish.collapseState);\r\n\r\n  const handleHemisphereFilterChange = (value) => {\r\n    dispatch(slice.setHemisphereFilter({ \r\n      value: parseInt(value)\r\n    }));\r\n  }\r\n\r\n  const handleMonthFilterChange = (value, checked) => {\r\n    dispatch(slice.setMonthFilter({ \r\n      value: parseInt(value),\r\n      checked: checked\r\n    }));\r\n  }\r\n\r\n  const handleTimeFilterChange = (value, checked) => {\r\n    dispatch(slice.setTimeFilter({ \r\n      value: parseInt(value),\r\n      checked: checked\r\n    }));\r\n  }\r\n\r\n  const handleLocationFilterChange = (value, checked) => {\r\n    dispatch(slice.setLocationFilter({ \r\n      value: parseInt(value),\r\n      checked: checked\r\n    }));\r\n  }\r\n\r\n  const handleShadowFilterChange = (value, checked) => {\r\n    dispatch(slice.setShadowFilter({ \r\n      value: parseInt(value),\r\n      checked: checked\r\n    }));\r\n  }\r\n\r\n  const handleCollapseToggle = (id, isOpen) => {\r\n    if (isModal) {\r\n      dispatch(slice.setCollapseModalState({ \r\n        id: id,\r\n        isOpen: isOpen\r\n      }));\r\n    } else {\r\n      dispatch(slice.setCollapseState({ \r\n        id: id,\r\n        isOpen: isOpen\r\n      }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <RadioFilter \r\n        id=\"hemisphere\"\r\n        items={filters.hemispheres} \r\n        selectedValue={hemisphereFilter.toString()} \r\n        label=\"Hemisphere\"\r\n        collapseState={isModal ? collapseModalState : collapseState}\r\n        onCollapseToggle={handleCollapseToggle}\r\n        onChange={handleHemisphereFilterChange} />\r\n      <CheckboxFilter \r\n        id=\"month\"\r\n        items={filters.months} \r\n        selectedItems={monthFilter} \r\n        label=\"Month\"\r\n        collapseState={isModal ? collapseModalState : collapseState}\r\n        onCollapseToggle={handleCollapseToggle}\r\n        onChange={handleMonthFilterChange} />    \r\n      <CheckboxFilter\r\n        id=\"time\" \r\n        items={filters.timeOfDay} \r\n        selectedItems={timeFilter} \r\n        label=\"Time\"\r\n        collapseState={isModal ? collapseModalState : collapseState}\r\n        onCollapseToggle={handleCollapseToggle}\r\n        onChange={handleTimeFilterChange} />\r\n      <CheckboxFilter \r\n        id=\"location\"\r\n        items={filters.locations} \r\n        selectedItems={locationFilter} \r\n        label=\"Location\"\r\n        collapseState={isModal ? collapseModalState : collapseState}\r\n        onCollapseToggle={handleCollapseToggle}\r\n        onChange={handleLocationFilterChange} />\r\n      <CheckboxFilter\r\n        id=\"shadow\"\r\n        items={filters.shadows} \r\n        selectedItems={shadowFilter} \r\n        label=\"Shadow\"\r\n        collapseState={isModal ? collapseModalState : collapseState}\r\n        onCollapseToggle={handleCollapseToggle}\r\n        onChange={handleShadowFilterChange} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFishFilter.propTypes = {\r\n  filters: PropTypes.object,\r\n  startOpen: PropTypes.bool\r\n}\r\n\r\nexport default FishFilter","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst FullScreenDialog = ({open, children}) => { \r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n        {children}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nFullScreenDialog.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default FullScreenDialog\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FullScreenDialog from './FullScreenDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst FilterDialog = ({open, onClose, children}) => {  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FullScreenDialog open={open}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton autoFocus edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Filters\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {children}\r\n    </FullScreenDialog>\r\n  );\r\n}\r\n\r\nFilterDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default FilterDialog\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst FishListItem = ({fish}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography>\r\n            {fish.name}\r\n          </Typography>\r\n          <Typography>\r\n            {fish.price}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FishListItem","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FishListItem from './FishListItem';\r\n\r\nconst FishList = ({fish}) => {\r\n  var fishListItems = fish && fish.map((x, index) => \r\n    <FishListItem key={index} fish={x}/>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {fishListItems}      \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FishList","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { createSelector } from 'reselect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FishFilter from './FishFilter';\r\nimport FilterDialog from './FilterDialog';\r\nimport FishList from './FishList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: 20\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst fishSelector = state => state.app.fish;\r\nconst filterSelector = state => state.app.filters;\r\nconst stateSelector = state => state.fish;\r\n\r\nconst filteredFishSelector = createSelector(\r\n  fishSelector,\r\n  stateSelector,\r\n  (fish, state) => {\r\n    const hemisphereId = state.hemisphereFilter;\r\n  \r\n    return fish.filter(fish => {     \r\n      const availability = fish.availability.filter(x => x.hemisphere.id === hemisphereId)[0];\r\n  \r\n      if (state.monthFilter && state.monthFilter.length) {\r\n        if (!availability || !availability.months.some(x => state.monthFilter.includes(x.id))) {\r\n          console.log(\"month\");\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (state.timeFilter && state.timeFilter.length) {\r\n        if (!fish.timeOfDay.some(x => state.timeFilter.includes(x.id))) {\r\n          console.log(\"time\");\r\n          return false;\r\n        }\r\n      }\r\n        \r\n      if (state.locationFilter && state.locationFilter.length) {\r\n        if (!state.locationFilter.includes(fish.location.id)) {\r\n          console.log(\"location\");\r\n          return false;\r\n        }\r\n      }\r\n        \r\n      if (state.shadowFilter && state.shadowFilter.length) {\r\n        if (!state.shadowFilter.includes(fish.shadow.id)) {\r\n          console.log(\"shadow\");\r\n          return false;\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    });\r\n  }\r\n)\r\n\r\nconst Fish = () => {\r\n  const classes = useStyles();\r\n  const fish = useSelector(filteredFishSelector);\r\n  const filters = useSelector(filterSelector);\r\n  const [open, setOpen] = useState(false); \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Hidden smDown>\r\n          <Grid item md={3}>\r\n            <Paper className={classes.paper} elevation={0}>\r\n              <FishFilter filters={filters} />\r\n            </Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"flex-end\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  size=\"large\" \r\n                  startIcon={<AddIcon />}\r\n                  onClick={handleClickOpen}\r\n                >\r\n                  Filters\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item md={9} xs={12}>\r\n          <FishList fish={fish} />\r\n        </Grid>\r\n      </Grid>\r\n      <FilterDialog open={open} onClose={handleClose}>\r\n        <FishFilter filters={filters} isModal={true} />\r\n      </FilterDialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fish","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    fish: [],\r\n    bugs: [],\r\n    filters: {},\r\n    error: null\r\n  },\r\n  reducers: {\r\n    fetchDataSucess(state, { payload }) {\r\n      state.fish = payload.fish;\r\n      state.bugs = payload.bugs;\r\n      state.filters = {\r\n        hemispheres: payload.hemispheres,\r\n        months: payload.months,\r\n        locations: payload.locations,\r\n        shadows: payload.shadows,\r\n        timeOfDay: payload.timeOfDay\r\n      }\r\n    },\r\n    fetchDataFail(state, { payload }) {\r\n      state.error = payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { \r\n  fetchDataSucess,\r\n  fetchDataFail\r\n} = appSlice.actions\r\n\r\nexport default appSlice.reducer\r\n\r\nexport const fetchData = (url)=> async dispatch => {\r\n  let data\r\n  try {\r\n    const response = await fetch(url);\r\n    data = await response.json();\r\n  } catch (err) {\r\n    dispatch(fetchDataFail(err.toString()))\r\n    return\r\n  }\r\n\r\n  dispatch(fetchDataSucess(data))\r\n}","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Layout from './components/Layout';\nimport { Home } from './components/Home';\nimport Fish from './components/Fish';\nimport { fetchData } from './appSlice'\nimport './App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //TODO: read from setting\n    dispatch(fetchData('https://kennypolk.github.io/ac-data/acdata-0.0.1.min.json'))\n  }, [dispatch]);\n\n  return (\n    <Layout>\n      <Route exact path='/' component={Home} />\n      <Route path='/fish' component={Fish} />\n    </Layout>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit'\r\n\r\nimport appReducer from '../appSlice'\r\nimport fishReducer from '../components/fishSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  fish: fishReducer\r\n})\r\n\r\nexport default rootReducer","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n})\r\n\r\nexport default store","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './app/store'\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}